{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/radash@7.1.0/node_modules/radash/src/array.ts", "../../../node_modules/.pnpm/radash@7.1.0/node_modules/radash/src/async.ts", "../../../node_modules/.pnpm/radash@7.1.0/node_modules/radash/src/curry.ts", "../../../node_modules/.pnpm/radash@7.1.0/node_modules/radash/src/number.ts", "../../../node_modules/.pnpm/radash@7.1.0/node_modules/radash/src/typed.ts", "../../../node_modules/.pnpm/radash@7.1.0/node_modules/radash/src/object.ts", "../../../node_modules/.pnpm/radash@7.1.0/node_modules/radash/src/random.ts", "../../../node_modules/.pnpm/radash@7.1.0/node_modules/radash/src/series.ts", "../../../node_modules/.pnpm/radash@7.1.0/node_modules/radash/src/string.ts", "../../../node_modules/.pnpm/radash@7.1.0/node_modules/radash/src/index.ts", "../../../node_modules/.pnpm/ky@0.31.3/node_modules/ky/source/errors/HTTPError.ts", "../../../node_modules/.pnpm/ky@0.31.3/node_modules/ky/source/errors/TimeoutError.ts", "../../../node_modules/.pnpm/ky@0.31.3/node_modules/ky/source/utils/is.ts", "../../../node_modules/.pnpm/ky@0.31.3/node_modules/ky/source/utils/merge.ts", "../../../node_modules/.pnpm/ky@0.31.3/node_modules/ky/source/core/constants.ts", "../../../node_modules/.pnpm/ky@0.31.3/node_modules/ky/source/utils/normalize.ts", "../../../node_modules/.pnpm/ky@0.31.3/node_modules/ky/source/utils/time.ts", "../../../node_modules/.pnpm/ky@0.31.3/node_modules/ky/source/core/Ky.ts", "../../../node_modules/.pnpm/ky@0.31.3/node_modules/ky/source/index.ts", "../../iserver/dist/geometry/transformer.js", "../../iserver/dist/utils/type-cast.js", "../../iserver/dist/services/data.js", "../../iserver/dist/utils/smfields.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/events/Event.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/extent/Relationship.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/AssertionError.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/asserts.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/extent.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/ObjectEventType.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/Disposable.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/array.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/functions.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/obj.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/events/Target.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/events/EventType.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/events.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/Observable.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/util.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/Object.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/has.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/proj/Units.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/proj/Projection.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/proj/epsg3857.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/proj/epsg4326.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/proj/projections.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/proj/transforms.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/math.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/sphere.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/proj.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/geom/flat/segments.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/geom/flat/contains.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/geom/flat/intersectsextent.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/size.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/dom.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/Image.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/source/Source.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/TileState.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/easing.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/Tile.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/ImageTile.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/reproj/Triangulation.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/reproj.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/reproj/Tile.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/TileRange.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/structs/LRUCache.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/tilecoord.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/TileCache.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/tilegrid/TileGrid.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/source/TileEventType.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/tilegrid.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/source/Tile.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/tileurlfunction.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/source/UrlTile.js", "../../../node_modules/.pnpm/ol@7.1.0/node_modules/ol/source/TileImage.js", "../src/layers/tile-supermap-rest.ts"],
  "sourcesContent": [null, null, null, null, null, null, null, null, null, null, "import type {NormalizedOptions} from '../types/options.js';\n\n// eslint-lint-disable-next-line @typescript-eslint/naming-convention\nexport class HTTPError extends Error {\n\tpublic response: Response;\n\tpublic request: Request;\n\tpublic options: NormalizedOptions;\n\n\tconstructor(response: Response, request: Request, options: NormalizedOptions) {\n\t\tconst code = (response.status || response.status === 0) ? response.status : '';\n\t\tconst title = response.statusText || '';\n\t\tconst status = `${code} ${title}`.trim();\n\t\tconst reason = status ? `status code ${status}` : 'an unknown error';\n\n\t\tsuper(`Request failed with ${reason}`);\n\n\t\tthis.name = 'HTTPError';\n\t\tthis.response = response;\n\t\tthis.request = request;\n\t\tthis.options = options;\n\t}\n}\n", "export class TimeoutError extends Error {\n\tpublic request: Request;\n\n\tconstructor(request: Request) {\n\t\tsuper('Request timed out');\n\t\tthis.name = 'TimeoutError';\n\t\tthis.request = request;\n\t}\n}\n", "// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isObject = (value: unknown): value is object => value !== null && typeof value === 'object';\n", "import type {KyHeadersInit, Options} from '../types/options.js';\nimport {isObject} from './is.js';\n\nexport const validateAndMerge = (...sources: Array<Partial<Options> | undefined>): Partial<Options> => {\n\tfor (const source of sources) {\n\t\tif ((!isObject(source) || Array.isArray(source)) && typeof source !== 'undefined') {\n\t\t\tthrow new TypeError('The `options` argument must be an object');\n\t\t}\n\t}\n\n\treturn deepMerge({}, ...sources);\n};\n\nexport const mergeHeaders = (source1: KyHeadersInit = {}, source2: KyHeadersInit = {}) => {\n\tconst result = new globalThis.Headers(source1 as HeadersInit);\n\tconst isHeadersInstance = source2 instanceof globalThis.Headers;\n\tconst source = new globalThis.Headers(source2 as HeadersInit);\n\n\tfor (const [key, value] of source.entries()) {\n\t\tif ((isHeadersInstance && value === 'undefined') || value === undefined) {\n\t\t\tresult.delete(key);\n\t\t} else {\n\t\t\tresult.set(key, value);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n// TODO: Make this strongly-typed (no `any`).\nexport const deepMerge = <T>(...sources: Array<Partial<T> | undefined>): T => {\n\tlet returnValue: any = {};\n\tlet headers = {};\n\n\tfor (const source of sources) {\n\t\tif (Array.isArray(source)) {\n\t\t\tif (!Array.isArray(returnValue)) {\n\t\t\t\treturnValue = [];\n\t\t\t}\n\n\t\t\treturnValue = [...returnValue, ...source];\n\t\t} else if (isObject(source)) {\n\t\t\tfor (let [key, value] of Object.entries(source)) {\n\t\t\t\tif (isObject(value) && key in returnValue) {\n\t\t\t\t\tvalue = deepMerge(returnValue[key], value);\n\t\t\t\t}\n\n\t\t\t\treturnValue = {...returnValue, [key]: value};\n\t\t\t}\n\n\t\t\tif (isObject((source as any).headers)) {\n\t\t\t\theaders = mergeHeaders(headers, (source as any).headers);\n\t\t\t\treturnValue.headers = headers;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn returnValue;\n};\n", "import type {Expect, Equal} from '@type-challenges/utils';\nimport {HttpMethod} from '../types/options.js';\n\nexport const supportsStreams = (() => {\n\tlet duplexAccessed = false;\n\tlet hasContentType = false;\n\tconst supportsReadableStream = typeof globalThis.ReadableStream === 'function';\n\n\tif (supportsReadableStream) {\n\t\thasContentType = new globalThis.Request('https://a.com', {\n\t\t\tbody: new globalThis.ReadableStream(),\n\t\t\tmethod: 'POST',\n\t\t\t// @ts-expect-error - Types are outdated.\n\t\t\tget duplex() {\n\t\t\t\tduplexAccessed = true;\n\t\t\t\treturn 'half';\n\t\t\t},\n\t\t}).headers.has('Content-Type');\n\t}\n\n\treturn duplexAccessed && !hasContentType;\n})();\n\nexport const supportsAbortController = typeof globalThis.AbortController === 'function';\nexport const supportsFormData = typeof globalThis.FormData === 'function';\n\nexport const requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'] as const;\n\nconst validate = <T extends Array<true>>() => undefined as unknown as T;\nvalidate<[\n\tExpect<Equal<typeof requestMethods[number], HttpMethod>>,\n]>();\n\nexport const responseTypes = {\n\tjson: 'application/json',\n\ttext: 'text/*',\n\tformData: 'multipart/form-data',\n\tarrayBuffer: '*/*',\n\tblob: '*/*',\n} as const;\n\n// The maximum value of a 32bit int (see issue #117)\nexport const maxSafeTimeout = 2_147_483_647;\n\nexport const stop = Symbol('stop');\n", "import {requestMethods} from '../core/constants.js';\nimport type {HttpMethod} from '../types/options.js';\nimport type {RetryOptions} from '../types/retry.js';\n\nexport const normalizeRequestMethod = (input: string): string =>\n\trequestMethods.includes(input as HttpMethod) ? input.toUpperCase() : input;\n\nconst retryMethods = ['get', 'put', 'head', 'delete', 'options', 'trace'];\n\nconst retryStatusCodes = [408, 413, 429, 500, 502, 503, 504];\n\nconst retryAfterStatusCodes = [413, 429, 503];\n\nconst defaultRetryOptions: Required<RetryOptions> = {\n\tlimit: 2,\n\tmethods: retryMethods,\n\tstatusCodes: retryStatusCodes,\n\tafterStatusCodes: retryAfterStatusCodes,\n\tmaxRetryAfter: Number.POSITIVE_INFINITY,\n};\n\nexport const normalizeRetryOptions = (retry: number | RetryOptions = {}): Required<RetryOptions> => {\n\tif (typeof retry === 'number') {\n\t\treturn {\n\t\t\t...defaultRetryOptions,\n\t\t\tlimit: retry,\n\t\t};\n\t}\n\n\tif (retry.methods && !Array.isArray(retry.methods)) {\n\t\tthrow new Error('retry.methods must be an array');\n\t}\n\n\tif (retry.statusCodes && !Array.isArray(retry.statusCodes)) {\n\t\tthrow new Error('retry.statusCodes must be an array');\n\t}\n\n\treturn {\n\t\t...defaultRetryOptions,\n\t\t...retry,\n\t\tafterStatusCodes: retryAfterStatusCodes,\n\t};\n};\n", "import {TimeoutError} from '../errors/TimeoutError.js';\n\nexport type TimeoutOptions = {\n\ttimeout: number;\n\tfetch: typeof fetch;\n};\n\n// `Promise.race()` workaround (#91)\nexport const timeout = async (\n\trequest: Request,\n\tabortController: AbortController | undefined,\n\toptions: TimeoutOptions,\n): Promise<Response> =>\n\tnew Promise((resolve, reject) => {\n\t\tconst timeoutId = setTimeout(() => {\n\t\t\tif (abortController) {\n\t\t\t\tabortController.abort();\n\t\t\t}\n\n\t\t\treject(new TimeoutError(request));\n\t\t}, options.timeout);\n\n\t\tvoid options\n\t\t\t.fetch(request)\n\t\t\t.then(resolve)\n\t\t\t.catch(reject)\n\t\t\t.then(() => {\n\t\t\t\tclearTimeout(timeoutId);\n\t\t\t});\n\t});\n\nexport const delay = async (ms: number) => new Promise(resolve => {\n\tsetTimeout(resolve, ms);\n});\n", "import {HTTPError} from '../errors/HTTPError.js';\nimport {TimeoutError} from '../errors/TimeoutError.js';\nimport type {Hooks} from '../types/hooks.js';\nimport type {Input, InternalOptions, NormalizedOptions, Options, SearchParamsInit} from '../types/options.js';\nimport {ResponsePromise} from '../types/ResponsePromise.js';\nimport {deepMerge, mergeHeaders} from '../utils/merge.js';\nimport {normalizeRequestMethod, normalizeRetryOptions} from '../utils/normalize.js';\nimport {delay, timeout, TimeoutOptions} from '../utils/time.js';\nimport {ObjectEntries} from '../utils/types.js';\nimport {maxSafeTimeout, responseTypes, stop, supportsAbortController, supportsFormData, supportsStreams} from './constants.js';\n\nexport class Ky {\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\tstatic create(input: Input, options: Options): ResponsePromise {\n\t\tconst ky = new Ky(input, options);\n\n\t\tconst fn = async (): Promise<Response> => {\n\t\t\tif (ky._options.timeout > maxSafeTimeout) {\n\t\t\t\tthrow new RangeError(`The \\`timeout\\` option cannot be greater than ${maxSafeTimeout}`);\n\t\t\t}\n\n\t\t\t// Delay the fetch so that body method shortcuts can set the Accept header\n\t\t\tawait Promise.resolve();\n\t\t\tlet response = await ky._fetch();\n\n\t\t\tfor (const hook of ky._options.hooks.afterResponse) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst modifiedResponse = await hook(\n\t\t\t\t\tky.request,\n\t\t\t\t\tky._options as NormalizedOptions,\n\t\t\t\t\tky._decorateResponse(response.clone()),\n\t\t\t\t);\n\n\t\t\t\tif (modifiedResponse instanceof globalThis.Response) {\n\t\t\t\t\tresponse = modifiedResponse;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tky._decorateResponse(response);\n\n\t\t\tif (!response.ok && ky._options.throwHttpErrors) {\n\t\t\t\tlet error = new HTTPError(response, ky.request, (ky._options as unknown) as NormalizedOptions);\n\n\t\t\t\tfor (const hook of ky._options.hooks.beforeError) {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\terror = await hook(error);\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\t// If `onDownloadProgress` is passed, it uses the stream API internally\n\t\t\t/* istanbul ignore next */\n\t\t\tif (ky._options.onDownloadProgress) {\n\t\t\t\tif (typeof ky._options.onDownloadProgress !== 'function') {\n\t\t\t\t\tthrow new TypeError('The `onDownloadProgress` option must be a function');\n\t\t\t\t}\n\n\t\t\t\tif (!supportsStreams) {\n\t\t\t\t\tthrow new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n\t\t\t\t}\n\n\t\t\t\treturn ky._stream(response.clone(), ky._options.onDownloadProgress);\n\t\t\t}\n\n\t\t\treturn response;\n\t\t};\n\n\t\tconst isRetriableMethod = ky._options.retry.methods.includes(ky.request.method.toLowerCase());\n\t\tconst result = (isRetriableMethod ? ky._retry(fn) : fn()) as ResponsePromise;\n\n\t\tfor (const [type, mimeType] of Object.entries(responseTypes) as ObjectEntries<typeof responseTypes>) {\n\t\t\tresult[type] = async () => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n\t\t\t\tky.request.headers.set('accept', ky.request.headers.get('accept') || mimeType);\n\n\t\t\t\tconst awaitedResult = await result;\n\t\t\t\tconst response = awaitedResult.clone();\n\n\t\t\t\tif (type === 'json') {\n\t\t\t\t\tif (response.status === 204) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (options.parseJson) {\n\t\t\t\t\t\treturn options.parseJson(await response.text());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn response[type]();\n\t\t\t};\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic request: Request;\n\tprotected abortController?: AbortController;\n\tprotected _retryCount = 0;\n\tprotected _input: Input;\n\tprotected _options: InternalOptions;\n\n\t// eslint-disable-next-line complexity\n\tconstructor(input: Input, options: Options = {}) {\n\t\tthis._input = input;\n\t\tthis._options = {\n\t\t\t// TODO: credentials can be removed when the spec change is implemented in all browsers. Context: https://www.chromestatus.com/feature/4539473312350208\n\t\t\tcredentials: (this._input as Request).credentials || 'same-origin',\n\t\t\t...options,\n\t\t\theaders: mergeHeaders((this._input as Request).headers, options.headers),\n\t\t\thooks: deepMerge<Required<Hooks>>(\n\t\t\t\t{\n\t\t\t\t\tbeforeRequest: [],\n\t\t\t\t\tbeforeRetry: [],\n\t\t\t\t\tbeforeError: [],\n\t\t\t\t\tafterResponse: [],\n\t\t\t\t},\n\t\t\t\toptions.hooks,\n\t\t\t),\n\t\t\tmethod: normalizeRequestMethod(options.method ?? (this._input as Request).method),\n\t\t\t// eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n\t\t\tprefixUrl: String(options.prefixUrl || ''),\n\t\t\tretry: normalizeRetryOptions(options.retry),\n\t\t\tthrowHttpErrors: options.throwHttpErrors !== false,\n\t\t\ttimeout: typeof options.timeout === 'undefined' ? 10_000 : options.timeout,\n\t\t\tfetch: options.fetch ?? globalThis.fetch.bind(globalThis),\n\t\t};\n\n\t\tif (typeof this._input !== 'string' && !(this._input instanceof URL || this._input instanceof globalThis.Request)) {\n\t\t\tthrow new TypeError('`input` must be a string, URL, or Request');\n\t\t}\n\n\t\tif (this._options.prefixUrl && typeof this._input === 'string') {\n\t\t\tif (this._input.startsWith('/')) {\n\t\t\t\tthrow new Error('`input` must not begin with a slash when using `prefixUrl`');\n\t\t\t}\n\n\t\t\tif (!this._options.prefixUrl.endsWith('/')) {\n\t\t\t\tthis._options.prefixUrl += '/';\n\t\t\t}\n\n\t\t\tthis._input = this._options.prefixUrl + this._input;\n\t\t}\n\n\t\tif (supportsAbortController) {\n\t\t\tthis.abortController = new globalThis.AbortController();\n\t\t\tif (this._options.signal) {\n\t\t\t\tthis._options.signal.addEventListener('abort', () => {\n\t\t\t\t\tthis.abortController!.abort();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._options.signal = this.abortController.signal;\n\t\t}\n\n\t\tthis.request = new globalThis.Request(this._input as RequestInfo, this._options as RequestInit);\n\n\t\tif (supportsStreams) {\n\t\t\t// @ts-expect-error - Types are outdated.\n\t\t\tthis.request.duplex = 'half';\n\t\t}\n\n\t\tif (this._options.searchParams) {\n\t\t\t// eslint-disable-next-line unicorn/prevent-abbreviations\n\t\t\tconst textSearchParams = typeof this._options.searchParams === 'string'\n\t\t\t\t? this._options.searchParams.replace(/^\\?/, '')\n\t\t\t\t: new URLSearchParams(this._options.searchParams as unknown as SearchParamsInit).toString();\n\t\t\t// eslint-disable-next-line unicorn/prevent-abbreviations\n\t\t\tconst searchParams = '?' + textSearchParams;\n\t\t\tconst url = this.request.url.replace(/(?:\\?.*?)?(?=#|$)/, searchParams);\n\n\t\t\t// To provide correct form boundary, Content-Type header should be deleted each time when new Request instantiated from another one\n\t\t\tif (\n\t\t\t\t((supportsFormData && this._options.body instanceof globalThis.FormData)\n\t\t\t\t\t|| this._options.body instanceof URLSearchParams) && !(this._options.headers && (this._options.headers as Record<string, string>)['content-type'])\n\t\t\t) {\n\t\t\t\tthis.request.headers.delete('content-type');\n\t\t\t}\n\n\t\t\tthis.request = new globalThis.Request(new globalThis.Request(url, this.request), this._options as RequestInit);\n\t\t}\n\n\t\tif (this._options.json !== undefined) {\n\t\t\tthis._options.body = JSON.stringify(this._options.json);\n\t\t\tthis.request.headers.set('content-type', this._options.headers.get('content-type') ?? 'application/json');\n\t\t\tthis.request = new globalThis.Request(this.request, {body: this._options.body});\n\t\t}\n\t}\n\n\tprotected _calculateRetryDelay(error: unknown) {\n\t\tthis._retryCount++;\n\n\t\tif (this._retryCount < this._options.retry.limit && !(error instanceof TimeoutError)) {\n\t\t\tif (error instanceof HTTPError) {\n\t\t\t\tif (!this._options.retry.statusCodes.includes(error.response.status)) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tconst retryAfter = error.response.headers.get('Retry-After');\n\t\t\t\tif (retryAfter && this._options.retry.afterStatusCodes.includes(error.response.status)) {\n\t\t\t\t\tlet after = Number(retryAfter);\n\t\t\t\t\tif (Number.isNaN(after)) {\n\t\t\t\t\t\tafter = Date.parse(retryAfter) - Date.now();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tafter *= 1000;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof this._options.retry.maxRetryAfter !== 'undefined' && after > this._options.retry.maxRetryAfter) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn after;\n\t\t\t\t}\n\n\t\t\t\tif (error.response.status === 413) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst BACKOFF_FACTOR = 0.3;\n\t\t\treturn BACKOFF_FACTOR * (2 ** (this._retryCount - 1)) * 1000;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tprotected _decorateResponse(response: Response): Response {\n\t\tif (this._options.parseJson) {\n\t\t\tresponse.json = async () => this._options.parseJson!(await response.text());\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprotected async _retry<T extends (...args: any) => Promise<any>>(fn: T): Promise<ReturnType<T> | void> {\n\t\ttry {\n\t\t\treturn await fn();\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-implicit-any-catch\n\t\t} catch (error) {\n\t\t\tconst ms = Math.min(this._calculateRetryDelay(error), maxSafeTimeout);\n\t\t\tif (ms !== 0 && this._retryCount > 0) {\n\t\t\t\tawait delay(ms);\n\n\t\t\t\tfor (const hook of this._options.hooks.beforeRetry) {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\tconst hookResult = await hook({\n\t\t\t\t\t\trequest: this.request,\n\t\t\t\t\t\toptions: (this._options as unknown) as NormalizedOptions,\n\t\t\t\t\t\terror: error as Error,\n\t\t\t\t\t\tretryCount: this._retryCount,\n\t\t\t\t\t});\n\n\t\t\t\t\t// If `stop` is returned from the hook, the retry process is stopped\n\t\t\t\t\tif (hookResult === stop) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn this._retry(fn);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprotected async _fetch(): Promise<Response> {\n\t\tfor (const hook of this._options.hooks.beforeRequest) {\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tconst result = await hook(this.request, (this._options as unknown) as NormalizedOptions);\n\n\t\t\tif (result instanceof Request) {\n\t\t\t\tthis.request = result;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (result instanceof Response) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\tif (this._options.timeout === false) {\n\t\t\treturn this._options.fetch(this.request.clone());\n\t\t}\n\n\t\treturn timeout(this.request.clone(), this.abortController, this._options as TimeoutOptions);\n\t}\n\n\t/* istanbul ignore next */\n\tprotected _stream(response: Response, onDownloadProgress: Options['onDownloadProgress']) {\n\t\tconst totalBytes = Number(response.headers.get('content-length')) || 0;\n\t\tlet transferredBytes = 0;\n\n\t\tif (response.status === 204) {\n\t\t\tif (onDownloadProgress) {\n\t\t\t\tonDownloadProgress({percent: 1, totalBytes, transferredBytes}, new Uint8Array());\n\t\t\t}\n\n\t\t\treturn new globalThis.Response(\n\t\t\t\tnull,\n\t\t\t\t{\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\theaders: response.headers,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\treturn new globalThis.Response(\n\t\t\tnew globalThis.ReadableStream({\n\t\t\t\tasync start(controller) {\n\t\t\t\t\tconst reader = response.body!.getReader();\n\n\t\t\t\t\tif (onDownloadProgress) {\n\t\t\t\t\t\tonDownloadProgress({percent: 0, transferredBytes: 0, totalBytes}, new Uint8Array());\n\t\t\t\t\t}\n\n\t\t\t\t\tasync function read() {\n\t\t\t\t\t\tconst {done, value} = await reader.read();\n\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (onDownloadProgress) {\n\t\t\t\t\t\t\ttransferredBytes += value.byteLength;\n\t\t\t\t\t\t\tconst percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n\t\t\t\t\t\t\tonDownloadProgress({percent, transferredBytes, totalBytes}, value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t\tawait read();\n\t\t\t\t\t}\n\n\t\t\t\t\tawait read();\n\t\t\t\t},\n\t\t\t}),\n\t\t\t{\n\t\t\t\tstatus: response.status,\n\t\t\t\tstatusText: response.statusText,\n\t\t\t\theaders: response.headers,\n\t\t\t},\n\t\t);\n\t}\n}\n", "/*! MIT License \u00A9 Sindre Sorhus */\n\nimport {Ky} from './core/Ky.js';\nimport {requestMethods, stop} from './core/constants.js';\nimport type {KyInstance} from './types/ky.js';\nimport type {Input, Options} from './types/options.js';\nimport {validateAndMerge} from './utils/merge.js';\nimport {Mutable} from './utils/types.js';\n\nconst createInstance = (defaults?: Partial<Options>): KyInstance => {\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\tconst ky: Partial<Mutable<KyInstance>> = (input: Input, options?: Options) => Ky.create(input, validateAndMerge(defaults, options));\n\n\tfor (const method of requestMethods) {\n\t\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\t\tky[method] = (input: Input, options?: Options) => Ky.create(input, validateAndMerge(defaults, options, {method}));\n\t}\n\n\tky.create = (newDefaults?: Partial<Options>) => createInstance(validateAndMerge(newDefaults));\n\tky.extend = (newDefaults?: Partial<Options>) => createInstance(validateAndMerge(defaults, newDefaults));\n\tky.stop = stop;\n\n\treturn ky as KyInstance;\n};\n\nconst ky = createInstance();\n\nexport default ky;\n\nexport type {\n\tOptions,\n\tNormalizedOptions,\n\tRetryOptions,\n\tSearchParamsOption,\n\tDownloadProgress,\n} from './types/options.js';\n\nexport type {\n\tHooks,\n\tBeforeRequestHook,\n\tBeforeRetryHook,\n\tBeforeRetryState,\n\tBeforeErrorHook,\n\tAfterResponseHook,\n} from './types/hooks.js';\n\nexport type {ResponsePromise} from './types/ResponsePromise.js';\nexport type {KyResponse} from './types/response.js';\nexport {HTTPError} from './errors/HTTPError.js';\nexport {TimeoutError} from './errors/TimeoutError.js';\n", "import { range } from \"radash\";\r\nimport { parseString } from \"../utils/type-cast\";\r\n// TODO: Rework later, so can accomodate multiple type and another geometry\r\nexport const transformer = {\r\n    POINT(geom) {\r\n        return { type: \"Point\", coordinates: [geom.points[0].x, geom.points[0].y] };\r\n    },\r\n    REGION(geom) {\r\n        if (geom.parts.length === 1) {\r\n            return { type: \"Polygon\", coordinates: [geom.points.map((p) => [p.x, p.y])] };\r\n        }\r\n        const multi = { type: \"MultiPolygon\", coordinates: [] };\r\n        let i = 0;\r\n        for (const p of geom.parts) {\r\n            const pg = [\r\n                geom.points.slice(i, i + p).map((c) => {\r\n                    return [c.x, c.y];\r\n                })\r\n            ];\r\n            i += p;\r\n            multi.coordinates.push(pg);\r\n        }\r\n        return multi;\r\n    }\r\n};\r\nexport function toGeoJSON(features, typeCast = true) {\r\n    const geojson = { type: \"FeatureCollection\", features: [] };\r\n    for (const f of features) {\r\n        const gt = f.geometry.type;\r\n        // @ts-expect-error fix later for dynamic transformation\r\n        const geom = transformer[gt](f.geometry);\r\n        const prop = {};\r\n        for (const i of range(0, f.fieldNames.length - 1)) {\r\n            prop[f.fieldNames[i]] = typeCast ? parseString(f.fieldValues[i]) : f.fieldValues[i];\r\n        }\r\n        const feature = { type: \"Feature\", geometry: geom, properties: prop };\r\n        geojson.features.push(feature);\r\n    }\r\n    return geojson;\r\n}\r\n", "export function isNumeric(num) {\r\n    return (typeof num === \"number\" || (typeof num === \"string\" && num.trim() !== \"\")) && !isNaN(num);\r\n}\r\nexport function parseString(val) {\r\n    if (!isNumeric(val)) {\r\n        return val;\r\n    }\r\n    return parseFloat(val);\r\n}\r\n", "import ky from \"ky\";\r\nimport { toGeoJSON } from \"../geometry/transformer\";\r\nexport async function getBySQL(url, options, kyOptions = {}) {\r\n    const res = await ky\r\n        .post(`${url}/featureResults.json`, {\r\n        ...kyOptions,\r\n        searchParams: {\r\n            returnContent: true,\r\n            fromIndex: options.fromIndex ?? 0,\r\n            toIndex: options.toIndex ?? -1,\r\n            ...(options.token != null && { token: options.token })\r\n        },\r\n        json: {\r\n            datasetNames: [`${options.datasource}:${options.dataset}`],\r\n            getFeatureMode: \"SQL\",\r\n            queryParameter: {\r\n                name: `${options.dataset}@${options.datasource}`,\r\n                attributeFilter: options.filter.select\r\n            }\r\n        }\r\n    })\r\n        .json();\r\n    if (res.error != null && res.succeed === false) {\r\n        throw new Error(`${res.error.code}: ${res.error.errorMsg}`);\r\n    }\r\n    return toGeoJSON(res.features, options.typeCast);\r\n}\r\n// export async function create(url: string, kyOptions: KyOptions = {}) {\r\n// }\r\n// export async function delete(url: string, kyOptions: KyOptions = {}) {\r\n// }\r\n", "import { omit } from \"radash\";\r\nexport const SMFIELDS = [\"SMAREA\", \"SMGEOMETRY\", \"SMID\", \"SMPERIMETER\", \"SMUSERID\", \"USERID\"];\r\nexport function removeSMField(prop) {\r\n    return omit(prop, SMFIELDS);\r\n}\r\n", "/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n", "/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n", "/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n", "/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n", "/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n", "/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n", "/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n", "/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n", "/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n", "/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n", "/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n", "/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n", "/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n", "/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n", "/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.1.0';\n", "/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n", "/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n", "/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n", "/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n", "/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n", "/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n", "/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n", "/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n", "/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n", "/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n", "/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output, dimension) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output, dimension) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n", "/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n", "/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n", "/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n", "/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (dest === undefined) {\n      dest = [size, size];\n    } else {\n      dest[0] = size;\n      dest[1] = size;\n    }\n    return dest;\n  }\n}\n", "import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n", "/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n", "/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'\u00A9 Acme Inc.'`)\n * * an array of simple strings (e.g. `['\u00A9 Acme Inc.', '\u00A9 Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n", "/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n", "/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n", "/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n", "/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n", "/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n", "/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n", "/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n", "/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n", "/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n", "/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n", "/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n", "/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      tempTileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n", "/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n", "/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n", "/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n", "/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n", "/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n", "/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n", "import BaseEvent from \"ol/events/Event\"\nimport { getCenter, getWidth } from \"ol/extent\"\nimport { Tile as TileLayer } from \"ol/layer\"\nimport type { Projection } from \"ol/proj\"\nimport { toSize } from \"ol/size\"\nimport { TileImage } from \"ol/source\"\nimport type { Options as TileOptions } from \"ol/source/TileImage\"\nimport TileGrid from \"ol/tilegrid/TileGrid\"\n\nfunction getResolutions(extent: number[]) {\n  const startResolution = getWidth(extent) / 256\n  const resolutions = new Array<number>(22)\n  for (let i = 0, ii = resolutions.length; i < ii; ++i) {\n    resolutions[i] = startResolution / 2 ** i\n  }\n  return resolutions\n}\n\nconst MAP_UNIT: Record<string, number> = {\n  m: 1,\n  degree: (Math.PI * 2 * 6378137) / 360,\n  degrees: (Math.PI * 2 * 6378137) / 360,\n  km: 1.0e-3,\n  in: 1 / 2.5399999918e-2,\n  ft: 0.3048\n}\n\nexport function getMeterPerMapUnit(mapUnit: string) {\n  return MAP_UNIT[mapUnit]\n}\n\nfunction resolutionToScale(resolution: number, dpi: number, mapUnit: string) {\n  const inchPerMeter = 1 / 0.0254\n  const meterPerMapUnit = getMeterPerMapUnit(mapUnit)\n  return 1 / (resolution * dpi * inchPerMeter * meterPerMapUnit)\n}\n\nexport function createTileGrid(extent: number[], origin?: number[], tileSize = 256) {\n  return new TileGrid({\n    resolutions: getResolutions(extent),\n    tileSize,\n    origin: origin ?? getCenter(extent)\n  })\n}\n\nexport function createTileLayer(url: string, projection: Projection) {\n  const resolutions = getResolutions(projection.getExtent())\n  const tileGrid = createTileGrid(resolutions, getCenter(projection.getExtent()))\n\n  return new TileLayer({\n    preload: Infinity,\n    source: new TileSuperMapRest({\n      url,\n      wrapX: true,\n      projection,\n      tileGrid,\n      format: \"png\",\n      transparent: true\n    })\n  })\n}\n\nclass TileChangeEvent extends BaseEvent {\n  private value: Record<string, any>\n  constructor(opt: { type: string; value: Record<string, any> }) {\n    super(opt.type)\n    this.value = opt.value\n  }\n}\n\nexport interface Options extends TileOptions {\n  format?: string\n  layersID?: number\n  tileProxy?: string\n  dpi?: number\n  prjCoordSys?: {\n    epsgCode: number\n  }\n  transparent?: boolean\n  redirect?: boolean\n  cacheEnabled?: boolean\n  overlapDisplayed?: boolean\n  overlapDisplayedOptions?: Record<string, unknown>\n  tileversion?: string\n  extent?: number[]\n}\n\nexport class TileSuperMapRest extends TileImage {\n  private tileProxy: string | undefined\n  public options: Options\n  private tileSetsIndex = -1\n  private tempIndex = -1\n  private origin: [number, number] | undefined\n  private requestParams: Record<string, string>\n  private tileSets: Record<string, Record<string, any>> | undefined\n\n  constructor(options: Options) {\n    options = options || {}\n    options.attributions =\n      options.attributions ||\n      \"Map Data <span>\u00A9 <a href='http://support.supermap.com.cn/product/iServer.aspx' target='_blank'>SuperMap iServer</a></span> with <span>\u00A9 <a href='https://iclient.supermap.io' target='_blank'>SuperMap iClient</a></span>\"\n\n    options.format = options?.format ?? \"png\"\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: options.state,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false\n    })\n\n    this.tileProxy = options.tileProxy\n\n    this.options = options\n\n    this.options.dpi = this.options?.dpi ?? 96\n    this.options.cacheEnabled = !(this.options.cacheEnabled === false)\n\n    this.requestParams = this.getAllRequestParams()\n\n    this.tileGrid = this.options?.tileGrid ?? this.setupTileGrid()\n\n    const o = this.tileGrid.getOrigin(0)\n    this.origin = [o[0], o[1]]\n    this.requestParams.origin = JSON.stringify({\n      x: o[0],\n      y: o[1]\n    })\n\n    this.tileUrlFunction = this.tileUrlFunctionSM\n  }\n\n  get param() {\n    return new URLSearchParams(this.requestParams).toString()\n  }\n\n  get mapUrl() {\n    return `${this.options.url}/tileImage.${this.options.format}?${this.param}`\n  }\n\n  setupTileGrid() {\n    if (this.options.extent) {\n      return createTileGrid(this.options.extent)\n    }\n\n    if (this.projection == null) {\n      throw new Error(\"missing projection\")\n    }\n\n    return createTileGrid(this.projection.getExtent())\n  }\n\n  /**\n   * @function  TileSuperMapRest.prototype.getAllRequestParams\n   * @description \u83B7\u53D6\u5168\u90E8\u8BF7\u6C42\u53C2\u6570\u3002\n   */\n  getAllRequestParams() {\n    const params: Record<string, any> = {}\n\n    params.redirect = this.options?.redirect ?? false\n    params.transparent = this.options?.transparent ?? true\n    params.cacheEnabled = this.options.cacheEnabled\n    params._cache = params.cacheEnabled\n\n    // \u8BBE\u7F6E\u5207\u7247\u539F\u70B9\n    if (this.origin) {\n      params.origin = JSON.stringify({\n        x: this.origin[0],\n        y: this.origin[1]\n      })\n    }\n\n    if (this.options.prjCoordSys) {\n      params.prjCoordSys = JSON.stringify(this.options.prjCoordSys)\n    }\n\n    if (this.options.layersID) {\n      params.layersID = this.options.layersID.toString()\n    }\n\n    if (!this.options.overlapDisplayed) {\n      params.overlapDisplayed = false\n      if (this.options.overlapDisplayedOptions) {\n        params.overlapDisplayedOptions = JSON.stringify(this.options.overlapDisplayedOptions)\n      }\n    } else {\n      params.overlapDisplayed = true\n    }\n\n    if (params.cacheEnabled && this.options.tileversion) {\n      params.tileversion = this.options.tileversion.toString()\n    }\n    // if (options.rasterfunction) {\n    //   params.rasterfunction = JSON.stringify(options.rasterfunction)\n    // }\n\n    return params\n  }\n\n  tileUrlFunctionSM(tileCoord: [number, number, number], pixelRatio: number, projection: Projection) {\n    const z = tileCoord[0]\n    const x = tileCoord[1]\n    const y = tileCoord[2]\n\n    const resolution = this.tileGrid!.getResolution(z)\n    const unit = projection.getUnits() || \"degree\"\n\n    if (this.options.dpi == null) {\n      throw new Error(\"undefined DPI\")\n    }\n\n    const scale = resolutionToScale(resolution, this.options.dpi, unit)\n    const tileSize = toSize(this.tileGrid!.getTileSize(z))\n\n    let url =\n      this.mapUrl + encodeURI(`&x=${x}&y=${y}&width=${tileSize[0]}&height=${tileSize[1]}&scale=${scale}`)\n\n    if (!this.options.cacheEnabled) {\n      url += `&_t=${new Date().getTime()}`\n    }\n    return url\n  }\n\n  setTileSetsInfo(\n    tileSets: Record<string, Record<string, any>> | Array<Record<string, Record<string, any>>>\n  ) {\n    if (Array.isArray(tileSets)) {\n      this.tileSets = tileSets[0]\n    }\n\n    this.tileSets = tileSets as Record<string, Record<string, any>>\n\n    if (!this.tileSets) {\n      return\n    }\n\n    this.dispatchEvent(\n      new TileChangeEvent({\n        type: \"tileversionschanged\",\n        value: {\n          tileVersion: this.tileSets.tileVersions\n        }\n      })\n    )\n    this.changeTilesVersion()\n  }\n\n  lastTilesVersion() {\n    this.tempIndex = this.tileSetsIndex - 1\n    this.changeTilesVersion()\n  }\n\n  nextTilesVersion() {\n    this.tempIndex = this.tileSetsIndex + 1\n    this.changeTilesVersion()\n  }\n\n  changeTilesVersion() {\n    if (this.tileSets == null) {\n      return\n    }\n    if (this.tempIndex === this.tileSetsIndex || this.tempIndex < 0) {\n      return\n    }\n\n    const tileVersions = this.tileSets.tileVersions\n    if (tileVersions && this.tempIndex < tileVersions.length && this.tempIndex >= 0) {\n      const name = tileVersions[this.tempIndex].name\n      const result = this.mergeTileVersionParam(name)\n      if (result) {\n        this.tileSetsIndex = this.tempIndex\n\n        this.dispatchEvent(\n          new TileChangeEvent({\n            type: \"tileversionschanged\",\n            value: {\n              tileVersion: tileVersions[this.tempIndex]\n            }\n          })\n        )\n      }\n    }\n  }\n\n  updateCurrentTileSetsIndex(index: number) {\n    this.tempIndex = index\n  }\n\n  mergeTileVersionParam(version: string) {\n    if (version) {\n      this.requestParams.tileversion = version\n      this.requestParams = this.getAllRequestParams()\n      this.refresh()\n      return true\n    }\n    return false\n  }\n}\n"],
  "mappings": "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",
  "names": ["group", "array", "getGropuId", "acc", "item", "groupId", "groupList", "_b", "__assign", "_a", "__spreadArray", "exports", "boil", "compareFunc", "sum", "fn", "first", "defaultValue", "last", "sort", "getter", "desc", "asc", "a", "b", "dsc", "alphabetical", "dir", "counting", "list", "identity", "id", "replace", "newItem", "match", "idx", "objectify", "getKey", "getValue", "select", "mapper", "condition", "max", "get", "v", "min", "cluster", "size", "clusterCount", "_c", "unique", "toKey", "valueMap", "key", "range", "start", "end", "step", "i", "flat", "lists", "intersects", "listA", "listB", "ident", "x", "dictB", "value", "fork", "merge", "root", "others", "matcher", "r", "matched", "replaceOrAppend", "sift", "iterate", "count", "func", "initValue", "diff", "other", "t", "bKeys", "array_1", "reduce", "array", "asyncReducer", "initValue", "__awaiter", "initProvided", "iter", "value", "iter_1", "_i", "item", "_a", "exports", "map", "asyncMapFunc", "result", "array_2", "newValue", "defer", "func", "callbacks", "register", "fn", "options", "_c", "err", "response", "callbacks_1", "_b", "rethrow", "rethrown", "AggregateError", "_super", "__extends", "errors", "_this", "parallel", "limit", "work", "index", "processor", "res", "results", "next", "error", "queues", "itemResults", "r", "x", "retry", "times", "delay", "backoff", "_d", "i", "_e", "sleep", "milliseconds", "tryit", "args", "err_1", "chain", "funcs", "_i", "args", "acc", "fn", "exports", "compose", "partial", "rest", "__spreadArray", "partob", "argobj", "restobj", "__assign", "proxied", "handler", "target", "propertyName", "memoize", "cache", "func", "keyFunc", "ttl", "key", "existing", "result", "memo", "_a", "_b", "_c", "_d", "debounce", "delay", "timer", "debounced", "throttle", "interval", "ready", "throttled", "toFloat", "value", "defaultValue", "result", "exports", "toInt", "isSymbol", "value", "exports", "isArray", "isObject", "isFunction", "isString", "isInt", "isFloat", "isNumber", "isEmpty", "length", "size", "keys", "typed_1", "shake", "obj", "filter", "x", "acc", "key", "__assign", "_a", "exports", "mapKeys", "mapFunc", "mapValues", "mapEntries", "toEntry", "value", "_c", "newKey", "newValue", "_b", "invert", "lowerize", "k", "upperize", "clone", "name", "listify", "toItem", "entries", "entry", "__spreadArray", "pick", "keys", "omit", "get", "getter", "defaultValue", "zip", "a", "b", "array_1", "random", "min", "max", "exports", "draw", "array", "index", "shuffle", "a", "b", "uid", "length", "specials", "characters", "acc", "series", "items", "_i", "_a", "acc", "item", "idx", "__assign", "_b", "itemsByValue", "itemsByIndex", "a", "b", "current", "defaultValue", "exports", "capitalize", "str", "lower", "exports", "_camal", "parts", "_i", "acc", "part", "camal", "x", "_snake", "snake", "_dash", "dash", "template", "data", "regex", "match", "array_1", "__createBinding", "exports", "async_1", "curry_1", "number_1", "object_1", "random_1", "series_1", "string_1", "typed_1", "HTTPError", "response", "request", "options", "code", "title", "status", "reason", "TimeoutError", "request", "isObject", "value", "validateAndMerge", "sources", "source", "isObject", "deepMerge", "mergeHeaders", "source1", "source2", "result", "isHeadersInstance", "key", "value", "returnValue", "headers", "supportsStreams", "duplexAccessed", "hasContentType", "supportsAbortController", "supportsFormData", "requestMethods", "validate", "responseTypes", "maxSafeTimeout", "stop", "normalizeRequestMethod", "input", "requestMethods", "retryMethods", "retryStatusCodes", "retryAfterStatusCodes", "defaultRetryOptions", "normalizeRetryOptions", "retry", "timeout", "request", "abortController", "options", "resolve", "reject", "timeoutId", "TimeoutError", "delay", "ms", "Ky", "input", "options", "mergeHeaders", "deepMerge", "normalizeRequestMethod", "normalizeRetryOptions", "supportsAbortController", "supportsStreams", "textSearchParams", "searchParams", "url", "supportsFormData", "ky", "fn", "maxSafeTimeout", "response", "hook", "modifiedResponse", "error", "HTTPError", "result", "type", "mimeType", "responseTypes", "TimeoutError", "retryAfter", "after", "ms", "delay", "stop", "timeout", "onDownloadProgress", "totalBytes", "transferredBytes", "controller", "reader", "read", "done", "value", "percent", "createInstance", "defaults", "ky", "input", "options", "Ky", "validateAndMerge", "method", "requestMethods", "newDefaults", "stop", "distribution_default", "import_radash", "isNumeric", "num", "parseString", "val", "transformer", "geom", "p", "multi", "i", "pg", "c", "toGeoJSON", "features", "typeCast", "geojson", "f", "gt", "prop", "parseString", "feature", "getBySQL", "url", "options", "kyOptions", "res", "distribution_default", "toGeoJSON", "import_radash", "SMFIELDS", "removeSMField", "prop", "BaseEvent", "type", "Event_default", "BaseEvent", "Relationship_default", "messages", "AssertionError", "code", "message", "AssertionError_default", "assert", "assertion", "errorCode", "AssertionError_default", "boundingExtent", "coordinates", "extent", "createEmpty", "i", "ii", "extendCoordinate", "containsCoordinate", "extent", "coordinate", "containsXY", "containsExtent", "extent1", "extent2", "x", "y", "coordinateRelationship", "minX", "minY", "maxX", "maxY", "relationship", "Relationship_default", "createEmpty", "createOrUpdate", "dest", "createOrUpdateEmpty", "extend", "extent1", "extent2", "extendCoordinate", "extent", "coordinate", "extendFlatCoordinates", "extent", "flatCoordinates", "offset", "end", "stride", "extendXY", "extendXY", "extent", "x", "y", "forEachCorner", "callback", "val", "getBottomLeft", "getBottomRight", "getTopRight", "getTopLeft", "getArea", "area", "isEmpty", "getWidth", "getHeight", "getCenter", "getCorner", "corner", "coordinate", "assert", "getHeight", "extent", "getIntersection", "extent1", "extent2", "dest", "intersection", "createEmpty", "intersects", "createOrUpdateEmpty", "getTopLeft", "extent", "getTopRight", "getWidth", "intersects", "extent1", "extent2", "isEmpty", "intersectsSegment", "extent", "start", "end", "intersects", "startRel", "coordinateRelationship", "endRel", "Relationship_default", "minX", "minY", "maxX", "maxY", "startX", "startY", "endX", "endY", "slope", "x", "y", "ObjectEventType_default", "Disposable", "Disposable_default", "numberSafeCompareFunction", "a", "b", "linearFindNearest", "arr", "target", "direction", "isSorted", "arr", "func", "strict", "compare", "numberSafeCompareFunction", "currentVal", "index", "res", "VOID", "clear", "object", "property", "isEmpty", "Target", "Disposable_default", "target", "type", "listener", "listeners", "listenersForType", "event", "isString", "evt", "Event_default", "dispatching", "pendingRemovals", "propagate", "i", "ii", "pr", "VOID", "clear", "index", "Target_default", "EventType_default", "listen", "target", "type", "listener", "thisArg", "once", "originalListener", "eventsKey", "listenOnce", "unlistenByKey", "key", "clear", "Observable", "Target_default", "EventType_default", "type", "listener", "len", "keys", "i", "listen", "key", "listenOnce", "unByKey", "ii", "unlistenByKey", "Observable_default", "abstract", "uidCounter_", "getUid", "obj", "ObjectEvent", "Event_default", "type", "key", "oldValue", "BaseObject", "Observable_default", "values", "getUid", "value", "eventType", "ObjectEventType_default", "listener", "silent", "source", "isEmpty", "Object_default", "ua", "FIREFOX", "SAFARI", "SAFARI_BUG_237906", "WEBKIT", "MAC", "WORKER_OFFSCREEN_CANVAS", "IMAGE_DECODE", "PASSIVE_EVENT_LISTENERS", "passive", "options", "METERS_PER_UNIT", "Projection", "options", "METERS_PER_UNIT", "global", "tileGrid", "extent", "worldExtent", "func", "Projection_default", "RADIUS", "HALF_SIZE", "EXTENT", "WORLD_EXTENT", "MAX_SAFE_Y", "EPSG3857Projection", "Projection_default", "code", "resolution", "point", "PROJECTIONS", "fromEPSG4326", "input", "output", "dimension", "length", "y", "toEPSG4326", "RADIUS", "EXTENT", "METERS_PER_UNIT", "EPSG4326Projection", "Projection_default", "code", "axisOrientation", "PROJECTIONS", "cache", "get", "code", "cache", "add", "projection", "transforms", "add", "source", "destination", "transformFn", "sourceCode", "destinationCode", "transforms", "get", "sourceCode", "destinationCode", "transform", "transforms", "clamp", "value", "min", "max", "solveLinearSystem", "mat", "n", "i", "maxRow", "maxEl", "r", "absValue", "tmp", "j", "coef", "k", "x", "l", "m", "toRadians", "angleInDegrees", "modulo", "a", "b", "toFixed", "n", "decimals", "factor", "floor", "n", "decimals", "toFixed", "ceil", "DEFAULT_RADIUS", "getDistance", "c1", "c2", "radius", "lat1", "toRadians", "lat2", "deltaLatBy2", "deltaLonBy2", "a", "cloneTransform", "input", "output", "dimension", "i", "ii", "identityTransform", "addProjection", "projection", "add", "addProjections", "projections", "get", "projectionLike", "getPointResolution", "resolution", "point", "units", "pointResolution", "getter", "metersPerUnit", "METERS_PER_UNIT", "projUnits", "toEPSG4326", "getTransformFromProjections", "vertices", "width", "getDistance", "height", "addEquivalentProjections", "source", "destination", "addEquivalentTransforms", "projections1", "projections2", "forwardTransform", "inverseTransform", "projection1", "projection2", "equivalent", "projection1", "projection2", "equalUnits", "getTransformFromProjections", "cloneTransform", "sourceProjection", "destinationProjection", "sourceCode", "destinationCode", "transformFunc", "get", "identityTransform", "getTransform", "source", "destination", "transform", "coordinate", "addCommon", "addEquivalentProjections", "PROJECTIONS", "addEquivalentTransforms", "fromEPSG4326", "toEPSG4326", "forEach", "flatCoordinates", "offset", "end", "stride", "callback", "ret", "linearRingContainsXY", "flatCoordinates", "offset", "end", "stride", "x", "y", "wn", "x1", "y1", "x2", "y2", "intersectsLineString", "flatCoordinates", "offset", "end", "stride", "extent", "coordinatesExtent", "extendFlatCoordinates", "createEmpty", "intersects", "containsExtent", "forEach", "point1", "point2", "intersectsSegment", "intersectsLinearRing", "flatCoordinates", "offset", "end", "stride", "extent", "intersectsLineString", "linearRingContainsXY", "scale", "size", "ratio", "dest", "toSize", "createCanvasContext2D", "width", "height", "canvasPool", "settings", "canvas", "WORKER_OFFSCREEN_CANVAS", "releaseCanvas", "context", "listenImage", "image", "loadHandler", "errorHandler", "img", "listening", "decoding", "loaded", "listenerKeys", "listenOnce", "EventType_default", "IMAGE_DECODE", "error", "unlistenByKey", "Source", "Object_default", "options", "get", "adaptAttributions", "self", "resolve", "reject", "abstract", "attributions", "state", "attributionLike", "frameState", "Source_default", "TileState_default", "easeIn", "t", "Tile", "Target_default", "tileCoord", "state", "options", "EventType_default", "TileState_default", "tile", "prev", "abstract", "id", "time", "start", "delta", "easeIn", "Tile_default", "ImageTile", "Tile_default", "tileCoord", "state", "src", "crossOrigin", "tileLoadFunction", "options", "element", "TileState_default", "getBlankImage", "image", "listenImage", "ctx", "createCanvasContext2D", "ImageTile_default", "MAX_SUBDIVISION", "MAX_TRIANGLE_WIDTH", "Triangulation", "sourceProj", "targetProj", "targetExtent", "maxSourceExtent", "errorThreshold", "destinationResolution", "transformInvCache", "transformInv", "getTransform", "c", "key", "getWidth", "destinationTopLeft", "getTopLeft", "destinationTopRight", "getTopRight", "destinationBottomRight", "getBottomRight", "destinationBottomLeft", "getBottomLeft", "sourceTopLeft", "sourceTopRight", "sourceBottomRight", "sourceBottomLeft", "maxSubdivision", "getArea", "leftBound", "triangle", "i", "arr", "newTriangle", "minX", "a", "b", "aSrc", "bSrc", "cSrc", "d", "dSrc", "sourceQuadExtent", "boundingExtent", "sourceCoverageX", "sourceWorldWidth", "wrapsX", "needsSubdivision", "targetQuadExtent", "intersects", "isNotFinite", "center", "centerSrc", "dx", "modulo", "dy", "bc", "bcSrc", "da", "daSrc", "ab", "abSrc", "cd", "cdSrc", "extent", "createEmpty", "src", "extendCoordinate", "Triangulation_default", "brokenDiagonalRendering_", "canvasPool", "drawTestTriangle", "ctx", "u1", "v1", "u2", "v2", "verifyBrokenDiagonalRendering", "data", "offset", "isBrokenDiagonalRendering", "calculateSourceResolution", "sourceProj", "targetProj", "targetCenter", "targetResolution", "sourceCenter", "transform", "sourceResolution", "getPointResolution", "targetMetersPerUnit", "sourceMetersPerUnit", "sourceExtent", "containsCoordinate", "compensationFactor", "calculateSourceExtentResolution", "targetExtent", "getCenter", "forEachCorner", "corner", "render", "width", "height", "pixelRatio", "triangulation", "sources", "gutter", "renderEdges", "interpolate", "context", "createCanvasContext2D", "pixelRound", "value", "sourceDataExtent", "createEmpty", "src", "i", "arr", "extend", "canvasWidthInUnits", "getWidth", "canvasHeightInUnits", "getHeight", "stitchContext", "stitchScale", "xPos", "yPos", "srcWidth", "srcHeight", "targetTopLeft", "getTopLeft", "triangle", "source", "target", "x0", "y0", "x1", "y1", "x2", "y2", "u0", "v0", "sourceNumericalShiftX", "sourceNumericalShiftY", "augmentedMatrix", "affineCoefs", "solveLinearSystem", "steps", "ud", "vd", "step", "ReprojTile", "Tile_default", "sourceProj", "sourceTileGrid", "targetProj", "targetTileGrid", "tileCoord", "wrappedTileCoord", "pixelRatio", "gutter", "getTileFunction", "errorThreshold", "renderEdges", "interpolate", "TileState_default", "targetExtent", "maxTargetExtent", "maxSourceExtent", "limitedTargetExtent", "getIntersection", "getArea", "sourceProjExtent", "targetResolution", "sourceResolution", "calculateSourceExtentResolution", "errorThresholdInPixels", "Triangulation_default", "sourceExtent", "clamp", "sourceRange", "srcX", "srcY", "tile", "sources", "i", "arr", "z", "size", "width", "height", "render", "leftToLoad", "state", "sourceListenKey", "listen", "EventType_default", "e", "unlistenByKey", "releaseCanvas", "canvasPool", "TileRange", "minX", "maxX", "minY", "maxY", "tileCoord", "tileRange", "x", "y", "createOrUpdate", "TileRange_default", "LRUCache", "highWaterMark", "keep", "key", "f", "entry", "options", "assert", "keys", "i", "values", "value", "size", "LRUCache_default", "createOrUpdate", "z", "x", "y", "tileCoord", "getKeyZXY", "getKey", "fromKey", "key", "hash", "tileCoord", "withinExtentAndZ", "tileGrid", "z", "x", "y", "tileRange", "TileCache", "LRUCache_default", "usedTiles", "key", "z", "fromKey", "tile", "getKey", "TileCache_default", "tmpTileCoord", "DECIMALS", "TileGrid", "options", "assert", "isSorted", "a", "b", "zoomFactor", "ii", "extent", "getTopLeft", "size", "z", "tileRange", "TileRange_default", "restrictedTileRange", "zoom", "callback", "i", "j", "jj", "tileCoord", "tempTileRange", "tempExtent", "x", "y", "tileCoordExtent", "createOrUpdate", "minX", "minY", "tileCoordZ", "tileCoordX", "tileCoordY", "factor", "maxX", "maxY", "origin", "resolution", "tileSize", "toSize", "coordinate", "opt_tileCoord", "reverseIntersectionPolicy", "scale", "ceil", "floor", "opt_direction", "linearFindNearest", "clamp", "viewport", "intersectsLinearRing", "length", "fullTileRanges", "TileGrid_default", "TileEventType_default", "getForProjection", "projection", "tileGrid", "createForProjection", "wrapX", "tileCoord", "z", "center", "projectionExtent", "extentFromProjection", "containsCoordinate", "worldWidth", "getWidth", "worldsAway", "createForExtent", "extent", "maxZoom", "tileSize", "corner", "resolutions", "resolutionsFromExtent", "TileGrid_default", "getCorner", "resolutionsFromExtent", "extent", "maxZoom", "tileSize", "maxResolution", "toSize", "height", "getHeight", "width", "getWidth", "length", "resolutions", "z", "createForProjection", "projection", "corner", "extentFromProjection", "createForExtent", "get", "half", "METERS_PER_UNIT", "createOrUpdate", "TileSource", "Source_default", "options", "tileSize", "toSize", "TileCache_default", "projection", "usedTiles", "tileCache", "z", "tileRange", "callback", "covered", "tile", "tileCoordKey", "loaded", "x", "y", "getKeyZXY", "TileState_default", "key", "pixelRatio", "abstract", "getForProjection", "sourceProjection", "assert", "equivalent", "tileGrid", "tilePixelRatio", "scale", "tileCoord", "wrapX", "withinExtentAndZ", "tileCount", "TileSourceEvent", "Event_default", "type", "Tile_default", "createFromTemplate", "template", "tileGrid", "zRegEx", "xRegEx", "yRegEx", "dashYRegEx", "tileCoord", "pixelRatio", "projection", "z", "range", "assert", "createFromTemplates", "templates", "len", "tileUrlFunctions", "createFromTileUrlFunctions", "h", "hash", "index", "modulo", "expandUrl", "url", "urls", "match", "startCharCode", "stopCharCode", "charCode", "stop", "UrlTile", "Tile_default", "options", "event", "tile", "uid", "getUid", "tileState", "type", "TileState_default", "TileEventType_default", "TileSourceEvent", "tileLoadFunction", "tileUrlFunction", "key", "url", "urls", "expandUrl", "createFromTemplates", "tileCoord", "pixelRatio", "projection", "z", "x", "y", "tileCoordKey", "getKeyZXY", "UrlTile_default", "TileImage", "UrlTile_default", "options", "defaultTileLoadFunction", "ImageTile_default", "key", "projection", "usedTiles", "usedTileCache", "id", "tileCache", "equivalent", "thisProj", "projKey", "getUid", "getForProjection", "TileCache_default", "z", "x", "y", "pixelRatio", "tileCoord", "urlTileCoord", "tileUrl", "tile", "TileState_default", "EventType_default", "sourceProjection", "cache", "tileCoordKey", "getKey", "sourceTileGrid", "targetTileGrid", "wrappedTileCoord", "newTile", "Tile_default", "getKeyZXY", "interimTile", "render", "tilegrid", "proj", "get", "imageTile", "src", "TileImage_default", "getResolutions", "extent", "startResolution", "getWidth", "resolutions", "i", "ii", "MAP_UNIT", "getMeterPerMapUnit", "mapUnit", "resolutionToScale", "resolution", "dpi", "inchPerMeter", "meterPerMapUnit", "createTileGrid", "origin", "tileSize", "TileGrid_default", "getCenter", "TileChangeEvent", "Event_default", "opt", "TileSuperMapRest", "TileImage_default", "options", "o", "createTileGrid", "params", "tileCoord", "pixelRatio", "projection", "z", "x", "y", "resolution", "unit", "scale", "resolutionToScale", "tileSize", "toSize", "url", "tileSets", "tileVersions", "name", "index", "version"]
}
